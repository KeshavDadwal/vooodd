// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0
// source: roles.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createRole = `-- name: CreateRole :one
INSERT INTO roles (
    name,
    malls_add,
    malls_view,
    malls_edit,
    malls_delete,
    stores_add,
    stores_view,
    stores_edit,
    stores_delete,
    products_add,
    products_view,
    products_edit,
    products_delete,
    products_price,
    users_view,
    users_add,
    users_edit,
    users_delete,
    users_role,
    audits_user,
    audits_product,
    store_locations_view,
    store_locations_add,
    store_locations_edit,
    store_locations_delete,
    offers_add,
    offers_edit,
    offers_delete,
    offers_view,
    reports_view,
    brands_view,
    brands_add,
    brands_edit,
    brands_delete,
    units_view,
    units_add,
    units_edit,
    units_delete,
    product_categories_view,
    product_categories_add,
    product_categories_edit,
    product_categories_delete
) VALUES (
    $1,
    $2,
    $3,
    $4,
    $5,
    $6,
    $7,
    $8,
    $9,
    $10,
    $11,
    $12,
    $13,
    $14,
    $15,
    $16,
    $17,
    $18,
    $19,
    $20,
    $21,
    $22,
    $23,
    $24,
    $25,
    $26,
    $27,
    $28,
    $29,
    $30,
    $31,
    $32,
    $33,
    $34,
    $35,
    $36,
    $37,
    $38,
    $39,
    $40,
    $41,
    $42
) RETURNING id
`

type CreateRoleParams struct {
	Name                    string      `json:"name"`
	MallsAdd                pgtype.Bool `json:"malls_add"`
	MallsView               pgtype.Bool `json:"malls_view"`
	MallsEdit               pgtype.Bool `json:"malls_edit"`
	MallsDelete             pgtype.Bool `json:"malls_delete"`
	StoresAdd               pgtype.Bool `json:"stores_add"`
	StoresView              pgtype.Bool `json:"stores_view"`
	StoresEdit              pgtype.Bool `json:"stores_edit"`
	StoresDelete            pgtype.Bool `json:"stores_delete"`
	ProductsAdd             pgtype.Bool `json:"products_add"`
	ProductsView            pgtype.Bool `json:"products_view"`
	ProductsEdit            pgtype.Bool `json:"products_edit"`
	ProductsDelete          pgtype.Bool `json:"products_delete"`
	ProductsPrice           pgtype.Bool `json:"products_price"`
	UsersView               pgtype.Bool `json:"users_view"`
	UsersAdd                pgtype.Bool `json:"users_add"`
	UsersEdit               pgtype.Bool `json:"users_edit"`
	UsersDelete             pgtype.Bool `json:"users_delete"`
	UsersRole               pgtype.Bool `json:"users_role"`
	AuditsUser              pgtype.Bool `json:"audits_user"`
	AuditsProduct           pgtype.Bool `json:"audits_product"`
	StoreLocationsView      pgtype.Bool `json:"store_locations_view"`
	StoreLocationsAdd       pgtype.Bool `json:"store_locations_add"`
	StoreLocationsEdit      pgtype.Bool `json:"store_locations_edit"`
	StoreLocationsDelete    pgtype.Bool `json:"store_locations_delete"`
	OffersAdd               pgtype.Bool `json:"offers_add"`
	OffersEdit              pgtype.Bool `json:"offers_edit"`
	OffersDelete            pgtype.Bool `json:"offers_delete"`
	OffersView              pgtype.Bool `json:"offers_view"`
	ReportsView             pgtype.Bool `json:"reports_view"`
	BrandsView              pgtype.Bool `json:"brands_view"`
	BrandsAdd               pgtype.Bool `json:"brands_add"`
	BrandsEdit              pgtype.Bool `json:"brands_edit"`
	BrandsDelete            pgtype.Bool `json:"brands_delete"`
	UnitsView               pgtype.Bool `json:"units_view"`
	UnitsAdd                pgtype.Bool `json:"units_add"`
	UnitsEdit               pgtype.Bool `json:"units_edit"`
	UnitsDelete             pgtype.Bool `json:"units_delete"`
	ProductCategoriesView   pgtype.Bool `json:"product_categories_view"`
	ProductCategoriesAdd    pgtype.Bool `json:"product_categories_add"`
	ProductCategoriesEdit   pgtype.Bool `json:"product_categories_edit"`
	ProductCategoriesDelete pgtype.Bool `json:"product_categories_delete"`
}

func (q *Queries) CreateRole(ctx context.Context, arg CreateRoleParams) (int32, error) {
	row := q.db.QueryRow(ctx, createRole,
		arg.Name,
		arg.MallsAdd,
		arg.MallsView,
		arg.MallsEdit,
		arg.MallsDelete,
		arg.StoresAdd,
		arg.StoresView,
		arg.StoresEdit,
		arg.StoresDelete,
		arg.ProductsAdd,
		arg.ProductsView,
		arg.ProductsEdit,
		arg.ProductsDelete,
		arg.ProductsPrice,
		arg.UsersView,
		arg.UsersAdd,
		arg.UsersEdit,
		arg.UsersDelete,
		arg.UsersRole,
		arg.AuditsUser,
		arg.AuditsProduct,
		arg.StoreLocationsView,
		arg.StoreLocationsAdd,
		arg.StoreLocationsEdit,
		arg.StoreLocationsDelete,
		arg.OffersAdd,
		arg.OffersEdit,
		arg.OffersDelete,
		arg.OffersView,
		arg.ReportsView,
		arg.BrandsView,
		arg.BrandsAdd,
		arg.BrandsEdit,
		arg.BrandsDelete,
		arg.UnitsView,
		arg.UnitsAdd,
		arg.UnitsEdit,
		arg.UnitsDelete,
		arg.ProductCategoriesView,
		arg.ProductCategoriesAdd,
		arg.ProductCategoriesEdit,
		arg.ProductCategoriesDelete,
	)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const deleteRole = `-- name: DeleteRole :one
DELETE FROM roles WHERE id = $1
RETURNING id, name, malls_add, malls_view, malls_edit, malls_delete, stores_add, stores_view, stores_edit, stores_delete, products_add, products_view, products_edit, products_delete, products_price, users_view, users_add, users_edit, users_delete, users_role, audits_user, audits_product, store_locations_view, store_locations_add, store_locations_edit, store_locations_delete, offers_add, offers_edit, offers_delete, offers_view, reports_view, brands_view, brands_add, brands_edit, brands_delete, units_view, units_add, units_edit, units_delete, product_categories_view, product_categories_add, product_categories_edit, product_categories_delete, created_at
`

func (q *Queries) DeleteRole(ctx context.Context, id int32) (Role, error) {
	row := q.db.QueryRow(ctx, deleteRole, id)
	var i Role
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.MallsAdd,
		&i.MallsView,
		&i.MallsEdit,
		&i.MallsDelete,
		&i.StoresAdd,
		&i.StoresView,
		&i.StoresEdit,
		&i.StoresDelete,
		&i.ProductsAdd,
		&i.ProductsView,
		&i.ProductsEdit,
		&i.ProductsDelete,
		&i.ProductsPrice,
		&i.UsersView,
		&i.UsersAdd,
		&i.UsersEdit,
		&i.UsersDelete,
		&i.UsersRole,
		&i.AuditsUser,
		&i.AuditsProduct,
		&i.StoreLocationsView,
		&i.StoreLocationsAdd,
		&i.StoreLocationsEdit,
		&i.StoreLocationsDelete,
		&i.OffersAdd,
		&i.OffersEdit,
		&i.OffersDelete,
		&i.OffersView,
		&i.ReportsView,
		&i.BrandsView,
		&i.BrandsAdd,
		&i.BrandsEdit,
		&i.BrandsDelete,
		&i.UnitsView,
		&i.UnitsAdd,
		&i.UnitsEdit,
		&i.UnitsDelete,
		&i.ProductCategoriesView,
		&i.ProductCategoriesAdd,
		&i.ProductCategoriesEdit,
		&i.ProductCategoriesDelete,
		&i.CreatedAt,
	)
	return i, err
}

const getRole = `-- name: GetRole :one
SELECT id, name, malls_add, malls_view, malls_edit, malls_delete, stores_add, stores_view, stores_edit, stores_delete, products_add, products_view, products_edit, products_delete, products_price, users_view, users_add, users_edit, users_delete, users_role, audits_user, audits_product, store_locations_view, store_locations_add, store_locations_edit, store_locations_delete, offers_add, offers_edit, offers_delete, offers_view, reports_view, brands_view, brands_add, brands_edit, brands_delete, units_view, units_add, units_edit, units_delete, product_categories_view, product_categories_add, product_categories_edit, product_categories_delete, created_at FROM roles WHERE id = $1
`

func (q *Queries) GetRole(ctx context.Context, id int32) (Role, error) {
	row := q.db.QueryRow(ctx, getRole, id)
	var i Role
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.MallsAdd,
		&i.MallsView,
		&i.MallsEdit,
		&i.MallsDelete,
		&i.StoresAdd,
		&i.StoresView,
		&i.StoresEdit,
		&i.StoresDelete,
		&i.ProductsAdd,
		&i.ProductsView,
		&i.ProductsEdit,
		&i.ProductsDelete,
		&i.ProductsPrice,
		&i.UsersView,
		&i.UsersAdd,
		&i.UsersEdit,
		&i.UsersDelete,
		&i.UsersRole,
		&i.AuditsUser,
		&i.AuditsProduct,
		&i.StoreLocationsView,
		&i.StoreLocationsAdd,
		&i.StoreLocationsEdit,
		&i.StoreLocationsDelete,
		&i.OffersAdd,
		&i.OffersEdit,
		&i.OffersDelete,
		&i.OffersView,
		&i.ReportsView,
		&i.BrandsView,
		&i.BrandsAdd,
		&i.BrandsEdit,
		&i.BrandsDelete,
		&i.UnitsView,
		&i.UnitsAdd,
		&i.UnitsEdit,
		&i.UnitsDelete,
		&i.ProductCategoriesView,
		&i.ProductCategoriesAdd,
		&i.ProductCategoriesEdit,
		&i.ProductCategoriesDelete,
		&i.CreatedAt,
	)
	return i, err
}

const updateRole = `-- name: UpdateRole :one
UPDATE roles
SET
    name = $2,
    malls_add = $3,
    malls_view = $4,
    malls_edit = $5,
    malls_delete = $6,
    stores_add = $7,
    stores_view = $8,
    stores_edit = $9,
    stores_delete = $10,
    products_add = $11,
    products_view = $12,
    products_edit = $13,
    products_delete = $14,
    products_price = $15,
    users_view = $16,
    users_add = $17,
    users_edit = $18,
    users_delete = $19,
    users_role = $20,
    audits_user = $21,
    audits_product = $22,
    store_locations_view = $23,
    store_locations_add = $24,
    store_locations_edit = $25,
    store_locations_delete = $26,
    offers_add = $27,
    offers_edit = $28,
    offers_delete = $29,
    offers_view = $30,
    reports_view = $31,
    brands_view = $32,
    brands_add = $33,
    brands_edit = $34,
    brands_delete = $35,
    units_view = $36,
    units_add = $37,
    units_edit = $38,
    units_delete = $39,
    product_categories_view = $40,
    product_categories_add = $41,
    product_categories_edit = $42,
    product_categories_delete = $43
WHERE id = $1
RETURNING id, name, malls_add, malls_view, malls_edit, malls_delete, stores_add, stores_view, stores_edit, stores_delete, products_add, products_view, products_edit, products_delete, products_price, users_view, users_add, users_edit, users_delete, users_role, audits_user, audits_product, store_locations_view, store_locations_add, store_locations_edit, store_locations_delete, offers_add, offers_edit, offers_delete, offers_view, reports_view, brands_view, brands_add, brands_edit, brands_delete, units_view, units_add, units_edit, units_delete, product_categories_view, product_categories_add, product_categories_edit, product_categories_delete, created_at
`

type UpdateRoleParams struct {
	ID                      int32       `json:"id"`
	Name                    string      `json:"name"`
	MallsAdd                pgtype.Bool `json:"malls_add"`
	MallsView               pgtype.Bool `json:"malls_view"`
	MallsEdit               pgtype.Bool `json:"malls_edit"`
	MallsDelete             pgtype.Bool `json:"malls_delete"`
	StoresAdd               pgtype.Bool `json:"stores_add"`
	StoresView              pgtype.Bool `json:"stores_view"`
	StoresEdit              pgtype.Bool `json:"stores_edit"`
	StoresDelete            pgtype.Bool `json:"stores_delete"`
	ProductsAdd             pgtype.Bool `json:"products_add"`
	ProductsView            pgtype.Bool `json:"products_view"`
	ProductsEdit            pgtype.Bool `json:"products_edit"`
	ProductsDelete          pgtype.Bool `json:"products_delete"`
	ProductsPrice           pgtype.Bool `json:"products_price"`
	UsersView               pgtype.Bool `json:"users_view"`
	UsersAdd                pgtype.Bool `json:"users_add"`
	UsersEdit               pgtype.Bool `json:"users_edit"`
	UsersDelete             pgtype.Bool `json:"users_delete"`
	UsersRole               pgtype.Bool `json:"users_role"`
	AuditsUser              pgtype.Bool `json:"audits_user"`
	AuditsProduct           pgtype.Bool `json:"audits_product"`
	StoreLocationsView      pgtype.Bool `json:"store_locations_view"`
	StoreLocationsAdd       pgtype.Bool `json:"store_locations_add"`
	StoreLocationsEdit      pgtype.Bool `json:"store_locations_edit"`
	StoreLocationsDelete    pgtype.Bool `json:"store_locations_delete"`
	OffersAdd               pgtype.Bool `json:"offers_add"`
	OffersEdit              pgtype.Bool `json:"offers_edit"`
	OffersDelete            pgtype.Bool `json:"offers_delete"`
	OffersView              pgtype.Bool `json:"offers_view"`
	ReportsView             pgtype.Bool `json:"reports_view"`
	BrandsView              pgtype.Bool `json:"brands_view"`
	BrandsAdd               pgtype.Bool `json:"brands_add"`
	BrandsEdit              pgtype.Bool `json:"brands_edit"`
	BrandsDelete            pgtype.Bool `json:"brands_delete"`
	UnitsView               pgtype.Bool `json:"units_view"`
	UnitsAdd                pgtype.Bool `json:"units_add"`
	UnitsEdit               pgtype.Bool `json:"units_edit"`
	UnitsDelete             pgtype.Bool `json:"units_delete"`
	ProductCategoriesView   pgtype.Bool `json:"product_categories_view"`
	ProductCategoriesAdd    pgtype.Bool `json:"product_categories_add"`
	ProductCategoriesEdit   pgtype.Bool `json:"product_categories_edit"`
	ProductCategoriesDelete pgtype.Bool `json:"product_categories_delete"`
}

func (q *Queries) UpdateRole(ctx context.Context, arg UpdateRoleParams) (Role, error) {
	row := q.db.QueryRow(ctx, updateRole,
		arg.ID,
		arg.Name,
		arg.MallsAdd,
		arg.MallsView,
		arg.MallsEdit,
		arg.MallsDelete,
		arg.StoresAdd,
		arg.StoresView,
		arg.StoresEdit,
		arg.StoresDelete,
		arg.ProductsAdd,
		arg.ProductsView,
		arg.ProductsEdit,
		arg.ProductsDelete,
		arg.ProductsPrice,
		arg.UsersView,
		arg.UsersAdd,
		arg.UsersEdit,
		arg.UsersDelete,
		arg.UsersRole,
		arg.AuditsUser,
		arg.AuditsProduct,
		arg.StoreLocationsView,
		arg.StoreLocationsAdd,
		arg.StoreLocationsEdit,
		arg.StoreLocationsDelete,
		arg.OffersAdd,
		arg.OffersEdit,
		arg.OffersDelete,
		arg.OffersView,
		arg.ReportsView,
		arg.BrandsView,
		arg.BrandsAdd,
		arg.BrandsEdit,
		arg.BrandsDelete,
		arg.UnitsView,
		arg.UnitsAdd,
		arg.UnitsEdit,
		arg.UnitsDelete,
		arg.ProductCategoriesView,
		arg.ProductCategoriesAdd,
		arg.ProductCategoriesEdit,
		arg.ProductCategoriesDelete,
	)
	var i Role
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.MallsAdd,
		&i.MallsView,
		&i.MallsEdit,
		&i.MallsDelete,
		&i.StoresAdd,
		&i.StoresView,
		&i.StoresEdit,
		&i.StoresDelete,
		&i.ProductsAdd,
		&i.ProductsView,
		&i.ProductsEdit,
		&i.ProductsDelete,
		&i.ProductsPrice,
		&i.UsersView,
		&i.UsersAdd,
		&i.UsersEdit,
		&i.UsersDelete,
		&i.UsersRole,
		&i.AuditsUser,
		&i.AuditsProduct,
		&i.StoreLocationsView,
		&i.StoreLocationsAdd,
		&i.StoreLocationsEdit,
		&i.StoreLocationsDelete,
		&i.OffersAdd,
		&i.OffersEdit,
		&i.OffersDelete,
		&i.OffersView,
		&i.ReportsView,
		&i.BrandsView,
		&i.BrandsAdd,
		&i.BrandsEdit,
		&i.BrandsDelete,
		&i.UnitsView,
		&i.UnitsAdd,
		&i.UnitsEdit,
		&i.UnitsDelete,
		&i.ProductCategoriesView,
		&i.ProductCategoriesAdd,
		&i.ProductCategoriesEdit,
		&i.ProductCategoriesDelete,
		&i.CreatedAt,
	)
	return i, err
}
